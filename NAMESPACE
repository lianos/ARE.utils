import("igraph")

export(
  # bioformats
  gff.read,
  gff.getAttributeField,
  gtf.read,
  gtf.getAttributeField,
  
  # config
  rconfig,
  
  # datasets
  trim.data,
  create.densities,
  
  # finance
  stockHistory,
  plotStocks,
  
  # general
  dopar,
  ':=',
  swap,
  filter.na,
  match.dim,
  dim.names,
  whos,
  wideScreen,
  
  # igraph
  head.igraph.es,
  degree,
  graph.laplacian,
  serialize.cytoscape.node.attributes,
  serialize.cytoscape,
  load.cytoscape.edgelist,
  normalize.edge.weights,
  graph.rename.vertices,
  graph.randomize.edges,
  nuke.islands,
  
  # glmnet
  cv.glmnet,
  plot.cv.error.glmnet,
  plot.cv.lambda.glmnet,
  
  # gostats
  do.gostats,
  
  # learning
  # createFolds,
  accuracy,
  
  # list
  extractEmbeddedLists,
  
  # matrix
  which.max,
  which.max.default,
  which.max.matrix,
  which.min,
  which.min.default,
  which.min.matrix,
  ind2sub,
  sub2ind,
  matrix.power,
  "%^%",
  ident,
  eye,
  replace.na,
  
  # packages
  installedPackages,
  reloadPackages,
  libLoaded,
  sourceDir,
  # source,
  
  # reports.moin
  moin.table,
  
  # stats
  standardizeData,
  evalMse,
  evalR2,
  evalSpearman,
  regressionPerformance,
  z.transform,
  z.score,
  dhist,
  
  # strings
  strip.slashes,
  strip.whitespace,
  string.startswith,
  string.endswith,
  
  # test
  almost.equal,
  '%~%',
  upper.tri.equal,
  
  # test.framework
  initTestEnvironment,
  doTest,
  fail,
  testReport,
  runTests,
  
  # vector
  trimVectors,
  padVectors,
  createMap,
  
  # visuals
  heatmap.22,
  palette.two.color,
  palette.two.colorRamp,
  palette.three.color,
  palette.gr.marray,
  palette.by.marray,
  my.image.matrix,
  plot.densities,
  add.error.bars,
  calendarHeat
)